section,heading,xpath,auth_file,auth_section,auth_col,separator,format,comment
metadata,binding UID,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return concat($b/ancestor::tei:TEI/tei:teiHeader/tei:fileDesc/tei:publicationStmt/tei:idno[@type=""msID""], ""_binding_"", count($b/(preceding::tei:binding | preceding::tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)])) + 1)",,,,,text,"A unique identifier for the binding, generated by concatenating the identifier given to the manuscript with which the binding is associated with a count of how many binding elements precede the current element in the entry file. In most cases, there is only one binding per manuscript."
metadata,file URL,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join($b/ancestor::tei:TEI/@xml:id, "" "")",,,,,text,"A unique identifier for the catalogue file, given in the xml:id attribute to the TEI root element."
metadata,collection,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join($b/ancestor::tei:TEI/tei:teiHeader/tei:fileDesc/tei:publicationStmt/tei:idno[@type=""collection""][not(@subtype=""alt"")]/string-join(., """"), "" "")",,,,,text,"The collection in which the manuscript is recorded, given in an idno element within the publicationStmt element which has @type ""collection"" and is not an alternative identifier (and therefore has no @subtype with ""alt"")."
metadata,ms ID,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join($b/ancestor::tei:TEI/tei:teiHeader/tei:fileDesc/tei:publicationStmt/tei:idno[@type=""msID""][not(@subtype=""alt"")]/string-join(., """"), "" "")",,,,,text,"The identifier given to the manuscript with which the binding is associated, given in an idno element within the publicationStmt element which has @type ""msID"" and is not an alternative identifier (and therefore has no @subtype with ""alt"")."
metadata,shelfmark,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join($b/ancestor::tei:TEI/tei:teiHeader/tei:fileDesc/tei:sourceDesc/tei:msDesc/tei:msIdentifier/tei:idno[@type=""shelfmark""][not(@subtype=""alt"")]/string-join(., """"), "" "")",,,,,text,"The shelfmark given to the manuscript with which the binding is associated, given in an idno element within the publicationStmt element which has @type ""shelfmark"" and is not an alternative identifier (and therefore has no @subtype with ""alt"")."
metadata,part ID,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join(($b/ancestor::tei:msPart | $b/ancestor::tei:msDesc)[last()]/@xml:id, "" "")",,,,,text,"The identifier given to the manuscript or manuscript part in an xml:id attribute. If the current row is not for a fragment or a manuscript part, this column will be the same as the metadata: ID column."
overview,binding,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join($b/*[not(self::tei:condition or self::tei:decoNote)]/string-join(., """"), ""; ""))",,,,,text,"Details of the binding as given in the binding element within the binding description, excluding details of the binding's condition and any decoration, which are given in columns BH and BJ respectively."
overview,condition,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join($b/tei:condition/string-join(., """"), ""; ""))",,,,,text,Details of the condition of the binding as given in the condition element within the binding description.
overview,decoration,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join($b/tei:decoNote/string-join(., """"), ""; ""))",,,,,text,Details of any decoration to the binding as given in decoNote elements within the binding description.
date,contemporary,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join($b/@contemporary, "" "")",,,,,boolean,"A boolean (true/false) value expressing whether or not the binding is contemporary with the manuscript or manuscript part itself, as encoded within the @contemporary attribute to the binding element within the binding description."
date,when,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join($b/@when, "" "")",,,,,date,"The date when the binding was produced, formatted as a date, as encoded within the @when attribute of the binding element within the binding description."
date,not before,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join(($b/@notBefore | $b/@from | $b/@when)[last()], "" "")",,,,,date,"The terminus post quem for this feature, formatted as a date, as encoded within the @notBefore attribute of the binding element within the binding description."
date,not after,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join(($b/@notAfter | $b/@to | $b/@when)[last()], "" "")",,,,,date,"The terminus ante quem for this feature, formatted as a date, as encoded within the @notAfter attribute of the binding element within the binding description."
date,certainty,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join(distinct-values($b/@cert), "" "")",,,,,text,"The certainty of the dating in the preceding columns, as encoded within the @cert attribute of the binding element within the binding description. Possible values are high, medium, and low."
date,calendar,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return string-join(distinct-values($b/@calendar), "" "")",,,,,text,"The calendar used for the dating in the preceding columns, as encoded within the @calendar attribute of the binding element within the binding description. The most common value is Gregorian."
dimensions,height,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(if (string-length(string-join($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:height[not(@quantity)] | tei:height[@quantity]/@quantity), "" "")) > 0) then (string-join(($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:height[not(@quantity)] | tei:height[@quantity]/@quantity), distinct-values($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/@unit)), "" "")) else (), "" ""))",,,,,number,"The height of the binding, as encoded within the height element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value may or may not be numeric. In many cases measurements may be rounded, for example to the nearest 5mm. These values are unconverted, even when the maximum and minimum values may be converted from inches to millimetres."
dimensions,height max,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(for $dim in $b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:height/@max | tei:height[@quantity]/@quantity | tei:height[not(@quantity)])[last()] return if (not(number($dim) = number($dim))) then string($dim) else if ($dim/ancestor::tei:dimensions/@unit = 'in') then round(number($dim) * 25.4) else string($dim), "" ""))",,,,,number,"The maximum height of the binding, as encoded within the @max attribute of the height element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value is numeric. When no maximum value is present because the measurement does not contain a range, that non-range measurement is inherited. In many cases measurements may be rounded, for example to the nearest 5mm."
dimensions,height min,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(for $dim in $b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:height/@min | tei:height[@quantity]/@quantity | tei:height[not(@quantity)])[last()] return if (not(number($dim) = number($dim))) then string($dim) else if ($dim/ancestor::tei:dimensions/@unit = 'in') then round(number($dim) * 25.4) else string($dim), "" ""))",,,,,number,"The minimum height of the binding, as encoded within the @min attribute of the height element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value is numeric. When no maximum value is present because the measurement does not contain a range, that non-range measurement is inherited. In many cases measurements may be rounded, for example to the nearest 5mm."
dimensions,width,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(if (string-length(string-join($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:width[not(@quantity)] | tei:width[@quantity]/@quantity), "" "")) > 0) then (string-join(($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:width[not(@quantity)] | tei:width[@quantity]/@quantity), distinct-values($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/@unit)), "" "")) else (), "" ""))",,,,,number,"The width of the binding, as encoded within the width element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value may or may not be numeric. In many cases measurements may be rounded, for example to the nearest 5mm. These values are unconverted, even when the maximum and minimum values may be converted from inches to millimetres."
dimensions,width max,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(for $dim in $b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:width/@max | tei:width[@quantity]/@quantity | tei:width[not(@quantity)])[last()] return if (not(number($dim) = number($dim))) then string($dim) else if ($dim/ancestor::tei:dimensions/@unit = 'in') then round(number($dim) * 25.4) else string($dim), "" ""))",,,,,number,"The maximum width of the binding, as encoded within the @max attribute of the width element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value is numeric. When no maximum value is present because the measurement does not contain a range, that non-range measurement is inherited. In many cases measurements may be rounded, for example to the nearest 5mm."
dimensions,width min,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(for $dim in $b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:width/@min | tei:width[@quantity]/@quantity | tei:width[not(@quantity)])[last()] return if (not(number($dim) = number($dim))) then string($dim) else if ($dim/ancestor::tei:dimensions/@unit = 'in') then round(number($dim) * 25.4) else string($dim), "" ""))",,,,,number,"The minimum width of the binding, as encoded within the @min attribute of the width element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value is numeric. When no minimum value is present because the measurement does not contain a range, that non-range measurement is inherited. In many cases measurements may be rounded, for example to the nearest 5mm."
dimensions,depth,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(if (string-length(string-join($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:depth[not(@quantity)] | tei:depth[@quantity]/@quantity), "" "")) > 0) then (string-join(($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:depth[not(@quantity)] | tei:depth[@quantity]/@quantity), distinct-values($b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/@unit)), "" "")) else (), "" ""))",,,,,number,"The depth of the binding, as encoded within the depth element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value may or may not be numeric. In many cases measurements may be rounded, for example to the nearest 5mm. These values are unconverted, even when the maximum and minimum values may be converted from inches to millimetres."
dimensions,depth max,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(for $dim in $b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:depth/@max | tei:depth[@quantity]/@quantity | tei:depth[not(@quantity)])[last()] return if (not(number($dim) = number($dim))) then string($dim) else if ($dim/ancestor::tei:dimensions/@unit = 'in') then round(number($dim) * 25.4) else string($dim), "" ""))",,,,,number,"The maximum depth of the binding, as encoded within the @max attribute of the depth element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value is numeric. When no maximum value is present because the measurement does not contain a range, that non-range measurement is inherited. In many cases measurements may be rounded, for example to the nearest 5mm."
dimensions,depth min,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(for $dim in $b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""]/(tei:depth/@min | tei:depth[@quantity]/@quantity | tei:depth[not(@quantity)])[last()] return if (not(number($dim) = number($dim))) then string($dim) else if ($dim/ancestor::tei:dimensions/@unit = 'in') then round(number($dim) * 25.4) else string($dim), "" ""))",,,,,number,"The minimum depth of the binding, as encoded within the @min attribute of the depth element within a dimensions element with @type ""binding"", contained within either the support or layout description. This value is numeric. When no minimum value is present because the measurement does not contain a range, that non-range measurement is inherited. In many cases measurements may be rounded, for example to the nearest 5mm."
dimensions,unit,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(distinct-values(for $dims in $b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""] return let $val := ($dims/(tei:height | tei:width | tei:depth)/@max | $dims/(tei:height | tei:width | tei:depth)[@quantity]/@quantity | $dims/(tei:height | tei:width | tei:depth)[not(@quantity)])[last()] return if (not(number($val) = number($val))) then $dims/@unit else if ($dims/@unit = 'in') then 'mm' else $dims/@unit), "" ""))",,,,,text,"The unit of the binding measurements, either as encoded within the unit element of a dimensions element with @type ""binding"", within either the support or layout description, or as converted from inches. Common values are mm and in."
dimensions,converted,"for $b in (//tei:binding | //tei:dimensions[@type=""binding""][not(ancestor::tei:physDesc//tei:binding)]) return normalize-space(string-join(distinct-values(for $dims in $b/ancestor::tei:physDesc/(tei:objectDesc/tei:layoutDesc/tei:objectDesc/tei:layout | tei:objectDesc/tei:supportDesc/tei:extent | tei:bindingDesc/tei:binding)//tei:dimensions[@type=""binding""] return let $val := ($dims/(tei:height | tei:width | tei:depth)/@max | $dims/(tei:height | tei:width | tei:depth)[@quantity]/@quantity | $dims/(tei:height | tei:width | tei:depth)[not(@quantity)])[last()] return if (not(number($val) = number($val))) then 'false' else if ($dims/@unit = 'in') then 'true' else 'false'), "" ""))",,,,,boolean,"A boolean (true/false) value expressing whether or not the maximum/minimum measurements in the preceding section have been converted from inches to millimetres. If the value is 'true', treat any measurements with caution as the conversion may mask rounding of the original value."